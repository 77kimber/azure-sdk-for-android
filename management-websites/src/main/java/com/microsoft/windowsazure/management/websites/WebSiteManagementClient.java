/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.windowsazure.management.websites;

import com.microsoft.windowsazure.core.FilterableService;
import com.microsoft.windowsazure.core.OperationResponse;
import com.microsoft.windowsazure.credentials.SubscriptionCloudCredentials;
import com.microsoft.windowsazure.exception.ServiceException;
import java.io.Closeable;
import java.net.URI;
import java.util.concurrent.Future;

/**
* The Web Sites Management API provides a RESTful set of web services that
* interact with the Windows Azure Web Sites service to manage your web sites.
* The API has entities that capture the relationship between an end user and
* Windows Azure Web Sites service.  (see
* http://msdn.microsoft.com/en-us/library/windowsazure/dn166981.aspx for more
* information)
*/
public interface WebSiteManagementClient extends Closeable, FilterableService<WebSiteManagementClient> {
    /**
    * The URI used as the base for all Service Management requests.
    * @return The BaseUri value.
    */
    URI getBaseUri();
    
    /**
    * When you create an Azure subscription, it is uniquely identified by a
    * subscription ID. The subscription ID forms part of the URI for every
    * call that you make to the Service Management API. The Azure Service
    * Management API uses mutual authentication of management certificates
    * over SSL to ensure that a request made to the service is secure. No
    * anonymous requests are allowed.
    * @return The Credentials value.
    */
    SubscriptionCloudCredentials getCredentials();
    
    /**
    * Operations for managing the server farm in a web space.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/dn194277.aspx for
    * more information)
    * @return The ServerFarmsOperations value.
    */
    ServerFarmOperations getServerFarmsOperations();
    
    /**
    * Operations for managing the web sites in a web space.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/dn166981.aspx for
    * more information)
    * @return The WebSitesOperations value.
    */
    WebSiteOperations getWebSitesOperations();
    
    /**
    * Operations for managing web spaces beneath your subscription.
    * @return The WebSpacesOperations value.
    */
    WebSpaceOperations getWebSpacesOperations();
    
    /**
    * Register your subscription to use Azure Web Sites.
    *
    * @throws ServiceException Thrown if an unexpected response is found.
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse registerSubscription() throws ServiceException;
    
    /**
    * Register your subscription to use Azure Web Sites.
    *
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> registerSubscriptionAsync();
    
    /**
    * Unregister your subscription to use Azure Web Sites.
    *
    * @throws ServiceException Thrown if an unexpected response is found.
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse unregisterSubscription() throws ServiceException;
    
    /**
    * Unregister your subscription to use Azure Web Sites.
    *
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> unregisterSubscriptionAsync();
}
