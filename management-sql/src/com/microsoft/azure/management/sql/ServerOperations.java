/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.azure.management.sql;

import com.microsoft.azure.core.OperationResponse;
import com.microsoft.azure.exception.ServiceException;
import com.microsoft.azure.management.sql.models.ServerChangeAdministratorPasswordParameters;
import com.microsoft.azure.management.sql.models.ServerCreateParameters;
import com.microsoft.azure.management.sql.models.ServerCreateResponse;
import com.microsoft.azure.management.sql.models.ServerListResponse;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.util.concurrent.Future;
import javax.xml.datatype.DatatypeConfigurationException;
import org.xmlpull.v1.XmlPullParserException;

/**
* Contains methods to allow various operations on Azure SQL Database Servers.
*/
public interface ServerOperations {
    /**
    * Changes the administrative password of an existing Azure SQL Database
    * Server for a given subscription.
    *
    * @param serverName Required. The name of the Azure SQL Database Server
    * that will have the administrator password changed.
    * @param parameters Required. The necessary parameters for modifying the
    * adminstrator password for a server.
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse changeAdministratorPassword(String serverName, ServerChangeAdministratorPasswordParameters parameters) throws MalformedURLException, ProtocolException, ServiceException, IOException;
    
    /**
    * Changes the administrative password of an existing Azure SQL Database
    * Server for a given subscription.
    *
    * @param serverName Required. The name of the Azure SQL Database Server
    * that will have the administrator password changed.
    * @param parameters Required. The necessary parameters for modifying the
    * adminstrator password for a server.
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> changeAdministratorPasswordAsync(String serverName, ServerChangeAdministratorPasswordParameters parameters);
    
    /**
    * Provisions a new SQL Database server in a subscription.
    *
    * @param parameters Required. The parameters needed to provision a server.
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @throws XmlPullParserException This exception is thrown to signal XML
    * Pull Parser related faults.
    * @throws DatatypeConfigurationException Invalid datatype configuration
    * @return The response returned from the Create Server operation.  This
    * contains all the information returned from the service when a server is
    * created.
    */
    ServerCreateResponse create(ServerCreateParameters parameters) throws MalformedURLException, ProtocolException, ServiceException, IOException, XmlPullParserException, DatatypeConfigurationException;
    
    /**
    * Provisions a new SQL Database server in a subscription.
    *
    * @param parameters Required. The parameters needed to provision a server.
    * @return The response returned from the Create Server operation.  This
    * contains all the information returned from the service when a server is
    * created.
    */
    Future<ServerCreateResponse> createAsync(ServerCreateParameters parameters);
    
    /**
    * Deletes the specified Azure SQL Database Server from a subscription.
    *
    * @param serverName Required. The name of the Azure SQL Database Server to
    * be deleted.
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse delete(String serverName) throws MalformedURLException, ProtocolException, ServiceException, IOException;
    
    /**
    * Deletes the specified Azure SQL Database Server from a subscription.
    *
    * @param serverName Required. The name of the Azure SQL Database Server to
    * be deleted.
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> deleteAsync(String serverName);
    
    /**
    * Returns all SQL Database Servers that are provisioned for a subscription.
    *
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @throws XmlPullParserException This exception is thrown to signal XML
    * Pull Parser related faults.
    * @throws DatatypeConfigurationException Invalid datatype configuration
    * @return The response structure for the Server List operation.  Contains a
    * list of all the servers in a subscription.
    */
    ServerListResponse list() throws MalformedURLException, ProtocolException, ServiceException, IOException, XmlPullParserException, DatatypeConfigurationException;
    
    /**
    * Returns all SQL Database Servers that are provisioned for a subscription.
    *
    * @return The response structure for the Server List operation.  Contains a
    * list of all the servers in a subscription.
    */
    Future<ServerListResponse> listAsync();
}
