/**
 * 
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

package com.microsoft.azure.management;

import com.microsoft.azure.core.OperationResponse;
import com.microsoft.azure.exception.ServiceException;
import com.microsoft.azure.management.models.SubscriptionGetResponse;
import com.microsoft.azure.management.models.SubscriptionListOperationsParameters;
import com.microsoft.azure.management.models.SubscriptionListOperationsResponse;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URISyntaxException;
import java.util.concurrent.Future;
import javax.xml.datatype.DatatypeConfigurationException;
import org.xmlpull.v1.XmlPullParserException;

/**
* Operations for listing subscription details.  (see
* http://msdn.microsoft.com/en-us/library/windowsazure/gg715315.aspx for more
* information)
*/
public interface SubscriptionOperations {
    /**
    * The Get Subscription operation returns account and resource allocation
    * information for the specified subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/hh403995.aspx for
    * more information)
    *
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @throws XmlPullParserException This exception is thrown to signal XML
    * Pull Parser related faults.
    * @throws URISyntaxException Thrown if there was an error parsing a URI in
    * the response.
    * @throws DatatypeConfigurationException Invalid datatype configuration
    * @return The Get Subscription operation response.
    */
    SubscriptionGetResponse get() throws MalformedURLException, ProtocolException, ServiceException, IOException, XmlPullParserException, URISyntaxException, DatatypeConfigurationException;
    
    /**
    * The Get Subscription operation returns account and resource allocation
    * information for the specified subscription.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/hh403995.aspx for
    * more information)
    *
    * @return The Get Subscription operation response.
    */
    Future<SubscriptionGetResponse> getAsync();
    
    /**
    * The List Subscription Operations operation returns a list of create,
    * update, and delete operations that were performed on a subscription
    * during the specified timeframe.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715318.aspx for
    * more information)
    *
    * @param parameters Required. Parameters supplied to the List Subscription
    * Operations operation.
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @throws XmlPullParserException This exception is thrown to signal XML
    * Pull Parser related faults.
    * @throws DatatypeConfigurationException Invalid datatype configuration
    * @return The List Subscription Operations operation response.
    */
    SubscriptionListOperationsResponse listOperations(SubscriptionListOperationsParameters parameters) throws MalformedURLException, ProtocolException, ServiceException, IOException, XmlPullParserException, DatatypeConfigurationException;
    
    /**
    * The List Subscription Operations operation returns a list of create,
    * update, and delete operations that were performed on a subscription
    * during the specified timeframe.  (see
    * http://msdn.microsoft.com/en-us/library/windowsazure/gg715318.aspx for
    * more information)
    *
    * @param parameters Required. Parameters supplied to the List Subscription
    * Operations operation.
    * @return The List Subscription Operations operation response.
    */
    Future<SubscriptionListOperationsResponse> listOperationsAsync(SubscriptionListOperationsParameters parameters);
    
    /**
    * Register a resource with your subscription.
    *
    * @param resourceName Required. Name of the resource to register.
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse registerResource(String resourceName) throws MalformedURLException, ProtocolException, ServiceException, IOException;
    
    /**
    * Register a resource with your subscription.
    *
    * @param resourceName Required. Name of the resource to register.
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> registerResourceAsync(String resourceName);
    
    /**
    * Unregister a resource with your subscription.
    *
    * @param resourceName Required. Name of the resource to unregister.
    * @throws MalformedURLException Thrown in case of an invalid request URL
    * @throws ProtocolException Thrown if invalid request method
    * @throws ServiceException Thrown if an unexpected response is found.
    * @throws IOException Signals that an I/O exception of some sort has
    * occurred
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    OperationResponse unregisterResource(String resourceName) throws MalformedURLException, ProtocolException, ServiceException, IOException;
    
    /**
    * Unregister a resource with your subscription.
    *
    * @param resourceName Required. Name of the resource to unregister.
    * @return A standard service response including an HTTP status code and
    * request ID.
    */
    Future<OperationResponse> unregisterResourceAsync(String resourceName);
}
