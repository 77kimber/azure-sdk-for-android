parameters:
  ServiceDirectory: not-specified # Set a default that breaks in obvious ways.
  Artifacts: []

jobs:
  - job: 'Build'

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: '$(OSVmImage)'

    steps:
      - template: /eng/common/pipelines/templates/steps/daily-dev-build-variable.yml

      - script: |
          ./gradlew -Pversion=1.0.0-foo.1 sdk:${{parameters.ServiceDirectory}}:publish
        displayName: Build and publish

      - ${{ each artifact in parameters.Artifacts }}:
        - task: PowerShell@2
          displayName: 'Copy artifacts to staging'
          inputs:
            pwsh: true
            workingDirectory: $(Agent.BuildDirectory)
            filePath: eng/scripts/Stage-MavenPackageArtifacts.ps1
            arguments: >
              -SourceDirectory $(System.DefaultWorkingDirectory)/sdk/${{parameters.ServiceDirectory}}/${{artifact.name}}/build/repo
              -TargetDirectory $(Build.ArtifactStagingDirectory)
              -InformationAction Continue

      - publish: $(Build.ArtifactStagingDirectory)
        displayName: 'Publish Artifacts ${{parameters.ArtifactName}}'
        artifact: ${{parameters.ArtifactName}}

  - job: 'Analyze'

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: '$(OSVmImage)'

    steps:

      - template: ../../../common/pipelines/templates/steps/verify-links.yml
        parameters:
          Directory: ''

      - script: |
          ./gradlew sdk:${{parameters.ServiceDirectory}}:lintDebug
        displayName: Lint sources

      - task: Gradle@2
        inputs:
          tasks: 'sdk:${{parameters.ServiceDirectory}}:assembleDebug'
          publishJUnitResults: false
          checkStyleRunAnalysis: true
          findBugsRunAnalysis: false
          pmdRunAnalysis: true
        displayName: Build and analyze

      - ${{ each artifact in parameters.Artifacts }}:
        - script: |
            mkdir -p $(Build.ArtifactStagingDirectory)/lint
            cp sdk/${{parameters.ServiceDirectory}}/${{artifact.name}}/build/reports/lint-results-debug.html \
               $(Build.ArtifactStagingDirectory)/lint/${{artifact.name}}-results-debug.html
          displayName: Stage reports for ${{artifact.name}}

      - publish: $(Build.ArtifactStagingDirectory)
        artifact: reports
        displayName: Publish reports

  - job: 'UnitTest'

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: '$(OSVmImage)'

    steps:
      - script: |
          ./gradlew sdk:${{parameters.ServiceDirectory}}:jacocoTestReportDebug
        displayName: Build and test

      - ${{ each artifact in parameters.Artifacts }}:
        - script: |
            cp sdk/${{parameters.ServiceDirectory}}/${{artifact.name}}/build/test-results/testDebugUnitTest/*.xml \
               $(Build.ArtifactStagingDirectory)/
          displayName: Stage test results for ${{artifact.name}}

        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: 'JaCoCo'
            summaryFileLocation: 'sdk/${{parameters.ServiceDirectory}}/${{artifact.name}}/build/reports/jacoco/debug/jacoco.xml'
            pathToSources: 'sdk/${{parameters.ServiceDirectory}}/${{artifact.name}}/src/main/java/'
          displayName: Publish code coverage for ${{artifact.name}}

      - task: PublishTestResults@2
        inputs:
          searchFolder: '$(Build.ArtifactStagingDirectory)'
          testResultsFiles: '*.xml'
          testRunTitle: 'Unit Tests'
        displayName: 'Publish unit test results'
